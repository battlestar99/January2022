drop down menu - select 

getText functions 

creating test case - manual 
creating test script - automation - regression 

requirement - user stories - jira 

testing: 

1. get the requirment 
2. understand the application
3. create test case / test scripts >> validating the requirement 
4. execute test case or scripts 
5. after getting the results - log defects 


1. locating tecniuqes - what should be used, what should not be used and why 

8 locating tecniques: 

<input type="text" id="usernamereg-firstName" class="ureg-fname input-with-icon icon-name " autocomplete="given-name" name="firstName" placeholder="First&nbsp;name" aria-label="First&nbsp;name" valueofsomething = "a"value="" maxlength="32" aria-required="true" data-rapid-tracking="true" data-ylk="elm:input;elmt:fname;slk:first-name;">

what is an attribute with unique value? 
fundamental attribute 

firstname text box
id = "name"

lastname text box 
id = "name"

driver.findlement(by.id(name));

//*[@valueofsomething="a"]

id
name

you have to find an unique value for all the weblements of the page 





compound attribute - 

xpath

relative xpath: comes from the attributes of the weblements
//*[@id="usernamereg-firstName"]
//*[@autocomplete="given-name"]
//*[@ placeholder="First&nbsp;name"]
//*[@id="usernamereg-firstName"]

common structure of relative xpath
//tagname[@attribute="value"]

modified xpath

text box 
name = firstname 

button
name = firstname

driver.findelement(by.name(firstname)


//input[@name="firstName"]

//button[@name="firstName"]

//*[@name="firstname"]


// and / forward slash 

absolute xpath - comes from the html and css structure of the weblement
/html/body/div[1]/div[2]/div[1]/div/form/fieldset/div/div[1]/input

id
name

xpath >> modified xpath

absolute xpath 


css selector 

tagname[attribute='value']
input[name='firstname']

locating tecniques - for links (anchor tag or a tag) 

linktext
partiallinktext 

finding multiple web elements - 

classname >>
tagname >> input, button

1. which one you prefer? 
2. if there is nothing unique what you are going to do?
3. modified xpath? 
4. links >> linktext, partiallinktext 


2. synchronization tecniuqes - wait 

implicit wait - is used to confirm if all the webelemenets of the page is 
loaded/displayed

3s -
8s-
11s-

explicit wait - is used to confirm if only one webelement of the page 
is loaded or displayed

hidden webelements >> 

college 

college name

thread.sleep() - java function to stop the execution of the code in the thread 


3. constructor - is  java tecnique to setup initial value for an object 

and used to create page object model 

class has two things: 
properties 
functions



4. page object model - 

class , object , methods

TestNG >> 
Java basic: 

class, package 
runnable class >> main method >> need to run the script , test scripts 
non-runnable class>> no main method >> functions and properties 

how we can create and use functions from the classes we created
and also from a library? 

create an object in a runnable class: 
classname objectname = new classname(); 

traditional programming >> write some instructions 

OOP >> object oriented programming 

you can design anything, then you can create things from the design 

class >> 

what it will be able to do
what it's attribute 

Human as a design 

can do >>
run
eat
play
drive 

atributes 
name
address
ssn
amountofmoney








facebook 

it can do
post
like
comment

attributes
userid = anik
password=dfljdlk
email=anik@agile1tech
dob

class is a design or prototype
object is the implementation of the design 

object oriented programming >>   

car 

two properties: 
color
mileage 

methods: 
drive
accelerate

constructor
page object model >> 

testscripts >> 

1. finding web elements

2. interacting web elements

3 web elements 

firstname >> 10 different scripts id=fname
lastname>> 10 different scripts
address >> 5 different scripts 

20 webelements >> 200 different scripts 

non runnable classes with functions that will find the weblements 

page object model - in selenium or automation testing 

seperating web elements from your test scripts 

for each web page of the application >> one page object model class

10 web page >> 10 page object model classes 

20 web pages >> 20 page object model classes



object driven framework: when you seperate the web elements or web objects from the test scripts 

data driven framework: when you seperate test data from test scripts

Hybrid Framework : object driven + data driven

page object model: 

1. why you are creating them
2. how you create them
page object models are not test scripts 



object driven framework: 

function how to create and use 

parameters
return 
name
class

why we create page object model 

maintanance and manage easily 

functionalities we need: 

1. organize the test >> pre requirment, tests, post requirments, multiple steps 

2. pass/fail criterion - 
expected result - requirment
actual result - after executing test 

expected result = actual result >> test passes
otherwise >> test fails 

3. generating report - 

smoke testing >> critical and important >> 50 smoke test


4. test suite - collection of test cases 

300 tests >> regression

5. data driven framework >> 

setup testNG: 

1. testNG plugin for eclipse 
2. testNG jar file 
























