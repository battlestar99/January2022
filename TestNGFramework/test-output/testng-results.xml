<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="17" passed="15">
  <reporter-output>
    <line>
      <![CDATA[Validating login with valid credential]]>
    </line>
    <line>
      <![CDATA[validating if user can add product to the cart]]>
    </line>
    <line>
      <![CDATA[validating checkout is successful with a product]]>
    </line>
    <line>
      <![CDATA[validating login with positive credentials]]>
    </line>
    <line>
      <![CDATA[validating login with negative credentials]]>
    </line>
    <line>
      <![CDATA[validating username, password and login is displayed in the login page]]>
    </line>
    <line>
      <![CDATA[validating username, password and login is enabled in the login page]]>
    </line>
    <line>
      <![CDATA[validating if the full name and email is enabled]]>
    </line>
  </reporter-output>
  <suite name="Regression testing" duration-ms="27491" started-at="2022-02-19T15:38:30Z" finished-at="2022-02-19T15:38:58Z">
    <groups>
    </groups>
    <test name="Regression for Release 11.5" duration-ms="27491" started-at="2022-02-19T15:38:30Z" finished-at="2022-02-19T15:38:58Z">
      <class name="package1.templatethree">
        <test-method status="PASS" signature="validateLoginElements()[pri:0, instance:package1.templatethree@7f9a81e8]" name="validateLoginElements" duration-ms="1" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginElements -->
        <test-method status="PASS" signature="validatePositiveLogin()[pri:1, instance:package1.templatethree@7f9a81e8]" name="validatePositiveLogin" duration-ms="1" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePositiveLogin -->
      </class> <!-- package1.templatethree -->
      <class name="package1.templateTwo">
        <test-method status="PASS" signature="btest()[pri:0, instance:package1.templateTwo@51081592]" name="btest" duration-ms="1" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- btest -->
        <test-method status="PASS" signature="ctest()[pri:0, instance:package1.templateTwo@51081592]" name="ctest" duration-ms="0" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctest -->
      </class> <!-- package1.templateTwo -->
      <class name="sauceDemoTest.loginValidation">
        <test-method status="PASS" signature="displayloginElements()[pri:0, instance:sauceDemoTest.loginValidation@36d4b5c]" name="displayloginElements" duration-ms="105" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <reporter-output>
            <line>
              <![CDATA[validating username, password and login is displayed in the login page]]>
            </line>
          </reporter-output>
        </test-method> <!-- displayloginElements -->
        <test-method status="PASS" signature="enableLoginElements()[pri:1, instance:sauceDemoTest.loginValidation@36d4b5c]" name="enableLoginElements" duration-ms="92" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <reporter-output>
            <line>
              <![CDATA[validating username, password and login is enabled in the login page]]>
            </line>
          </reporter-output>
        </test-method> <!-- enableLoginElements -->
      </class> <!-- sauceDemoTest.loginValidation -->
      <class name="package1.templateFour">
        <test-method status="PASS" signature="validateLoginElements()[pri:0, instance:package1.templateFour@5034c75a]" name="validateLoginElements" duration-ms="0" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginElements -->
        <test-method status="PASS" signature="setupeachTest()[pri:0, instance:package1.templateFour@5034c75a]" name="setupeachTest" is-config="true" duration-ms="0" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupeachTest -->
        <test-method status="PASS" signature="setupeachTest()[pri:0, instance:package1.templateFour@5034c75a]" name="setupeachTest" is-config="true" duration-ms="1" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupeachTest -->
        <test-method status="PASS" signature="endeachTest()[pri:0, instance:package1.templateFour@5034c75a]" name="endeachTest" is-config="true" duration-ms="0" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endeachTest -->
        <test-method status="PASS" signature="validatePositiveLogin()[pri:1, instance:package1.templateFour@5034c75a]" name="validatePositiveLogin" duration-ms="0" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePositiveLogin -->
        <test-method status="PASS" signature="endeachTest()[pri:0, instance:package1.templateFour@5034c75a]" name="endeachTest" is-config="true" duration-ms="0" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endeachTest -->
      </class> <!-- package1.templateFour -->
      <class name="sauceDemoTest.endToEnd">
        <test-method status="PASS" signature="setupTest()[pri:0, instance:sauceDemoTest.endToEnd@643b1d11]" name="setupTest" is-config="true" duration-ms="4289" started-at="2022-02-19T10:38:30Z" finished-at="2022-02-19T10:38:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method status="PASS" signature="testSetup()[pri:0, instance:sauceDemoTest.loginActionValidation@2ef5e5e3]" name="testSetup" is-config="true" duration-ms="3347" started-at="2022-02-19T10:38:34Z" finished-at="2022-02-19T10:38:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetup -->
        <test-method status="PASS" signature="testSetup()[pri:0, instance:sauceDemoTest.loginValidation@36d4b5c]" name="testSetup" is-config="true" duration-ms="3615" started-at="2022-02-19T10:38:38Z" finished-at="2022-02-19T10:38:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetup -->
        <test-method status="PASS" signature="testSetup()[pri:0, instance:package1.templateOne@396a51ab]" name="testSetup" is-config="true" duration-ms="0" started-at="2022-02-19T10:38:41Z" finished-at="2022-02-19T10:38:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetup -->
        <test-method status="PASS" signature="setupTest()[pri:0, instance:package1.templateFour@5034c75a]" name="setupTest" is-config="true" duration-ms="0" started-at="2022-02-19T10:38:41Z" finished-at="2022-02-19T10:38:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method status="PASS" signature="setupTest()[pri:0, instance:package1.templateFive@51efea79]" name="setupTest" is-config="true" duration-ms="0" started-at="2022-02-19T10:38:41Z" finished-at="2022-02-19T10:38:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method status="PASS" signature="setupTest()[pri:0, instance:package1.templateTwo@51081592]" name="setupTest" is-config="true" duration-ms="0" started-at="2022-02-19T10:38:41Z" finished-at="2022-02-19T10:38:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method status="PASS" signature="setupTest()[pri:0, instance:package1.templatethree@7f9a81e8]" name="setupTest" is-config="true" duration-ms="0" started-at="2022-02-19T10:38:41Z" finished-at="2022-02-19T10:38:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method status="PASS" signature="setupTest()[pri:0, instance:sauceDemoTest.testSigmaSignup@6d00a15d]" name="setupTest" is-config="true" duration-ms="4112" started-at="2022-02-19T10:38:41Z" finished-at="2022-02-19T10:38:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method status="PASS" signature="loginTest()[pri:0, instance:sauceDemoTest.endToEnd@643b1d11]" name="loginTest" duration-ms="552" started-at="2022-02-19T10:38:45Z" finished-at="2022-02-19T10:38:46Z">
          <reporter-output>
            <line>
              <![CDATA[Validating login with valid credential]]>
            </line>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="addProduct()[pri:1, instance:sauceDemoTest.endToEnd@643b1d11]" name="addProduct" duration-ms="312" started-at="2022-02-19T10:38:46Z" finished-at="2022-02-19T10:38:46Z">
          <reporter-output>
            <line>
              <![CDATA[validating if user can add product to the cart]]>
            </line>
          </reporter-output>
        </test-method> <!-- addProduct -->
        <test-method status="PASS" signature="checkoutProcess()[pri:2, instance:sauceDemoTest.endToEnd@643b1d11]" name="checkoutProcess" duration-ms="2523" started-at="2022-02-19T10:38:46Z" finished-at="2022-02-19T10:38:49Z">
          <reporter-output>
            <line>
              <![CDATA[validating checkout is successful with a product]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkoutProcess -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:sauceDemoTest.endToEnd@643b1d11]" name="endTest" is-config="true" duration-ms="2879" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:sauceDemoTest.loginActionValidation@2ef5e5e3]" name="endTest" is-config="true" duration-ms="2901" started-at="2022-02-19T10:38:53Z" finished-at="2022-02-19T10:38:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:sauceDemoTest.loginValidation@36d4b5c]" name="endTest" is-config="true" duration-ms="750" started-at="2022-02-19T10:38:56Z" finished-at="2022-02-19T10:38:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:package1.templateFive@51efea79]" name="endTest" is-config="true" duration-ms="0" started-at="2022-02-19T10:38:57Z" finished-at="2022-02-19T10:38:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:package1.templateFour@5034c75a]" name="endTest" is-config="true" duration-ms="0" started-at="2022-02-19T10:38:57Z" finished-at="2022-02-19T10:38:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:package1.templateTwo@51081592]" name="endTest" is-config="true" duration-ms="1" started-at="2022-02-19T10:38:57Z" finished-at="2022-02-19T10:38:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:package1.templateOne@396a51ab]" name="endTest" is-config="true" duration-ms="0" started-at="2022-02-19T10:38:57Z" finished-at="2022-02-19T10:38:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:sauceDemoTest.testSigmaSignup@6d00a15d]" name="endTest" is-config="true" duration-ms="781" started-at="2022-02-19T10:38:57Z" finished-at="2022-02-19T10:38:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:package1.templatethree@7f9a81e8]" name="endTest" is-config="true" duration-ms="0" started-at="2022-02-19T10:38:57Z" finished-at="2022-02-19T10:38:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- sauceDemoTest.endToEnd -->
      <class name="package1.templateOne">
        <test-method status="PASS" signature="mainTest()[pri:0, instance:package1.templateOne@396a51ab]" name="mainTest" duration-ms="1" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainTest -->
      </class> <!-- package1.templateOne -->
      <class name="sauceDemoTest.testSigmaSignup">
        <test-method status="PASS" signature="validateElement()[pri:0, instance:sauceDemoTest.testSigmaSignup@6d00a15d]" name="validateElement" duration-ms="81" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <reporter-output>
            <line>
              <![CDATA[validating if the full name and email is enabled]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateElement -->
      </class> <!-- sauceDemoTest.testSigmaSignup -->
      <class name="package1.templateFive">
        <test-method status="PASS" signature="atest()[pri:0, instance:package1.templateFive@51efea79]" name="atest" duration-ms="0" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atest -->
        <test-method status="FAIL" signature="btest()[pri:0, instance:package1.templateFive@51efea79]" name="btest" duration-ms="1" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at org.testng.Assert.assertFalse(Assert.java:73)
	at package1.templateFive.btest(templateFive.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- btest -->
      </class> <!-- package1.templateFive -->
      <class name="sauceDemoTest.loginActionValidation">
        <test-method status="PASS" signature="testUrlnavigation()[pri:0, instance:sauceDemoTest.loginActionValidation@2ef5e5e3]" name="testUrlnavigation" is-config="true" duration-ms="243" started-at="2022-02-19T10:38:49Z" finished-at="2022-02-19T10:38:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUrlnavigation -->
        <test-method status="PASS" signature="positiveLogin()[pri:0, instance:sauceDemoTest.loginActionValidation@2ef5e5e3]" name="positiveLogin" duration-ms="487" started-at="2022-02-19T10:38:49Z" finished-at="2022-02-19T10:38:50Z">
          <reporter-output>
            <line>
              <![CDATA[validating login with positive credentials]]>
            </line>
          </reporter-output>
        </test-method> <!-- positiveLogin -->
        <test-method status="PASS" signature="testUrlnavigation()[pri:0, instance:sauceDemoTest.loginActionValidation@2ef5e5e3]" name="testUrlnavigation" is-config="true" duration-ms="84" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUrlnavigation -->
        <test-method status="FAIL" signature="negativeLogin()[pri:1, instance:sauceDemoTest.loginActionValidation@2ef5e5e3]" name="negativeLogin" duration-ms="289" started-at="2022-02-19T10:38:50Z" finished-at="2022-02-19T10:38:50Z">
          <exception class="junit.framework.ComparisonFailure">
            <message>
              <![CDATA[expected:<...s://www.saucedemo.co[m]/> but was:<...s://www.saucedemo.co[]/>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.ComparisonFailure: expected:<...s://www.saucedemo.co[m]/> but was:<...s://www.saucedemo.co[]/>
	at junit.framework.Assert.assertEquals(Assert.java:100)
	at junit.framework.Assert.assertEquals(Assert.java:107)
	at sauceDemoTest.loginActionValidation.negativeLogin(loginActionValidation.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.ComparisonFailure -->
          <reporter-output>
            <line>
              <![CDATA[validating login with negative credentials]]>
            </line>
          </reporter-output>
        </test-method> <!-- negativeLogin -->
      </class> <!-- sauceDemoTest.loginActionValidation -->
    </test> <!-- Regression for Release 11.5 -->
  </suite> <!-- Regression testing -->
</testng-results>
